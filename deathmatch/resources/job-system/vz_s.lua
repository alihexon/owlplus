local meats = {}
local boxes = {}

addEvent("givePlayerMeat",true)
addEventHandler("givePlayerMeat",getRootElement(),function(playerSource)
	if not isElement(meats[playerSource]) then
		meats[playerSource] = createObject(2806,0,0,0)
		setObjectScale(meats[playerSource],0.7)
		setElementCollisionsEnabled(meats[playerSource], false)
		setElementInterior(meats[playerSource],getElementInterior(playerSource))
		setElementDimension(meats[playerSource],getElementDimension(playerSource))
		exports.bone_attach:attachElementToBone(meats[playerSource],playerSource,12, 0.10, 0.05, 0.15, 0, 80, 80)
		setElementData(playerSource,"meat",meats[playerSource])
		setPedAnimation(playerSource, "CARRY", "crry_prtial", 0, true, false, true, true)
		setElementData(playerSource,"isMeatInHand",true)
	end
end)

addEvent("takePlayerMeat",true)
addEventHandler("takePlayerMeat",getRootElement(),function(playerSource)
	if isElement(meats[playerSource]) then
		exports.bone_attach:detachElementFromBone(meats[playerSource])
		destroyElement(meats[playerSource])
		meats[playerSource] = false
		setPedAnimation(playerSource,"CARRY","putdwn",1100,false,false,false,false)
		setElementData(playerSource,"isMeatInHand",false)
		toggleControl(playerSource,"fire", true)
		toggleControl(playerSource,"sprint", true)
		toggleControl(playerSource,"crouch", true)
		toggleControl(playerSource,"jump", true)
	end
end)

addEvent("givePlayerBox",true)
addEventHandler("givePlayerBox",getRootElement(),function (playerSource)
	if not isElement(boxes[playerSource] ) then
		boxes[playerSource] = createObject(1271,0,0,0)
		setObjectScale(boxes[playerSource],0.7)
		setElementInterior(boxes[playerSource],getElementInterior(playerSource))
		setElementDimension(boxes[playerSource],getElementDimension(playerSource))
		exports.bone_attach:attachElementToBone(boxes[playerSource],playerSource,12,0.2,0.2,0.2,0,90,65)
		setPedAnimation(playerSource, "CARRY", "crry_prtial", 0, true, false, true, true)
		setElementData(playerSource,"isBoxInHand",true)
	end
end)

addEvent("takePlayerBox",true)
addEventHandler("takePlayerBox",getRootElement(),function(playerSource)
	if isElement(boxes[playerSource]) then
		exports.bone_attach:detachElementFromBone(boxes[playerSource])
		destroyElement(boxes[playerSource])
		boxes[playerSource] = false
		setPedAnimation(playerSource,"CARRY","putdwn",1100,false,false,false,false)
		setElementData(playerSource,"isBoxInHand",false)
		toggleControl(playerSource,"fire", true)
		toggleControl(playerSource,"sprint", true)
		toggleControl(playerSource,"crouch", true)
		toggleControl(playerSource,"jump", true)
	end
end)

local entrar = createMarker(2501.7822265625, -1494.6964111328, 24-0.85,"cylinder",1,65, 105, 225,60)
local sair = createMarker(965.03198, 2107.87915, 1011.0-0.85,"cylinder",1,65, 105, 225,60)
setElementDimension(sair,48)
setElementInterior(sair,1)

function entrar1 (source)
        setElementInterior(source, 1, 962.68292, 2107.75903, 1011.03027)
        setElementDimension(source, 48)
end
addEventHandler ("onMarkerHit", entrar, entrar1)

function sair1 (source)
        setElementInterior(source, 0, 2501.76709, -1497.24475, 24.00000)
        setElementDimension(source, 0)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)
		exports.global:takeItem(source, 115, 2)

end
addEventHandler ("onMarkerHit", sair, sair1)

---------------

local marker_machete = createMarker (960.85, 2098.9658203125, 1011-0.5, "cylinder", 0.6, 16, 111, 231, 50)
setElementInterior(marker_machete,1)
setElementDimension(marker_machete,48)

function msg_buy(source)
	if isElementWithinMarker(source, marker_machete) then
	local Emprego = getElementData ( source, "job" )
			if Emprego == 8 then
		exports.global:giveItem(source, 115, 2)
    setElementModel(source, 168)
		end
	end
end
addEventHandler("onMarkerHit", marker_machete, msg_buy)


function givemaitmoney()
local aleatorio = math.random(1000, 1600)
exports.global:giveMoney(source, aleatorio)
outputChatBox("#4169E1[BOT] #ffffff+"..aleatorio.."$",source,255,255,255,true)
end
addEvent("vz_GiveMoney", true)
addEventHandler("vz_GiveMoney", root, givemaitmoney)